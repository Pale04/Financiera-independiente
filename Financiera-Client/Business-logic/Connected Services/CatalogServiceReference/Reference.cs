//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CatalogServiceReferenece
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/FinancieraServer.DataContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CatalogServiceReferenece.ResponseWithContentOfArrayOfCreditConditionDC1nk_PiFui))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui))]
    public partial class Response : object
    {
        
        private string MessageField;
        
        private int StatusCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode
        {
            get
            {
                return this.StatusCodeField;
            }
            set
            {
                this.StatusCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseWithContentOfArrayOfCreditConditionDC1nk_PiFui", Namespace="http://schemas.datacontract.org/2004/07/FinancieraServer.DataContracts")]
    public partial class ResponseWithContentOfArrayOfCreditConditionDC1nk_PiFui : CatalogServiceReferenece.Response
    {
        
        private CatalogServiceReferenece.CreditConditionDC[] DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatalogServiceReferenece.CreditConditionDC[] Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui", Namespace="http://schemas.datacontract.org/2004/07/FinancieraServer.DataContracts")]
    public partial class ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui : CatalogServiceReferenece.Response
    {
        
        private CatalogServiceReferenece.RequiredDocumentDC[] DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatalogServiceReferenece.RequiredDocumentDC[] Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequiredDocumentDC", Namespace="http://schemas.datacontract.org/2004/07/FinancieraServer.DataContracts")]
    public partial class RequiredDocumentDC : object
    {
        
        private string FileTypeField;
        
        private int IdField;
        
        private string NameField;
        
        private bool StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType
        {
            get
            {
                return this.FileTypeField;
            }
            set
            {
                this.FileTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditConditionDC", Namespace="http://schemas.datacontract.org/2004/07/FinancieraServer.DataContracts")]
    public partial class CreditConditionDC : object
    {
        
        private int IVAField;
        
        private int IdField;
        
        private int InterestRateField;
        
        private int PaymentsPerMonthField;
        
        private int RegistrerIdField;
        
        private bool StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IVA
        {
            get
            {
                return this.IVAField;
            }
            set
            {
                this.IVAField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InterestRate
        {
            get
            {
                return this.InterestRateField;
            }
            set
            {
                this.InterestRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentsPerMonth
        {
            get
            {
                return this.PaymentsPerMonthField;
            }
            set
            {
                this.PaymentsPerMonthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegistrerId
        {
            get
            {
                return this.RegistrerIdField;
            }
            set
            {
                this.RegistrerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CatalogServiceReferenece.ICatalogService")]
    public interface ICatalogService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationNext", ReplyAction="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationNextRespon" +
            "se")]
        CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui GetRequiredDocumentationByPaginationNext(int pageSize, int lastId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationNext", ReplyAction="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationNextRespon" +
            "se")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui> GetRequiredDocumentationByPaginationNextAsync(int pageSize, int lastId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationPrevious", ReplyAction="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationPreviousRe" +
            "sponse")]
        CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui GetRequiredDocumentationByPaginationPrevious(int pageSize, int firstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationPrevious", ReplyAction="http://tempuri.org/ICatalogService/GetRequiredDocumentationByPaginationPreviousRe" +
            "sponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui> GetRequiredDocumentationByPaginationPreviousAsync(int pageSize, int firstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/AddRequiredDocument", ReplyAction="http://tempuri.org/ICatalogService/AddRequiredDocumentResponse")]
        CatalogServiceReferenece.Response AddRequiredDocument(CatalogServiceReferenece.RequiredDocumentDC requiredDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/AddRequiredDocument", ReplyAction="http://tempuri.org/ICatalogService/AddRequiredDocumentResponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.Response> AddRequiredDocumentAsync(CatalogServiceReferenece.RequiredDocumentDC requiredDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateRequiredDocument", ReplyAction="http://tempuri.org/ICatalogService/UpdateRequiredDocumentResponse")]
        CatalogServiceReferenece.Response UpdateRequiredDocument(CatalogServiceReferenece.RequiredDocumentDC requiredDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateRequiredDocument", ReplyAction="http://tempuri.org/ICatalogService/UpdateRequiredDocumentResponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateRequiredDocumentAsync(CatalogServiceReferenece.RequiredDocumentDC requiredDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateRequiredDocumentState", ReplyAction="http://tempuri.org/ICatalogService/UpdateRequiredDocumentStateResponse")]
        CatalogServiceReferenece.Response UpdateRequiredDocumentState(int id, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateRequiredDocumentState", ReplyAction="http://tempuri.org/ICatalogService/UpdateRequiredDocumentStateResponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateRequiredDocumentStateAsync(int id, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCreditConditionsByPagination", ReplyAction="http://tempuri.org/ICatalogService/GetCreditConditionsByPaginationResponse")]
        CatalogServiceReferenece.ResponseWithContentOfArrayOfCreditConditionDC1nk_PiFui GetCreditConditionsByPagination(int pageSize, int markId, bool next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCreditConditionsByPagination", ReplyAction="http://tempuri.org/ICatalogService/GetCreditConditionsByPaginationResponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.ResponseWithContentOfArrayOfCreditConditionDC1nk_PiFui> GetCreditConditionsByPaginationAsync(int pageSize, int markId, bool next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/AddCreditCondition", ReplyAction="http://tempuri.org/ICatalogService/AddCreditConditionResponse")]
        CatalogServiceReferenece.Response AddCreditCondition(CatalogServiceReferenece.CreditConditionDC creditCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/AddCreditCondition", ReplyAction="http://tempuri.org/ICatalogService/AddCreditConditionResponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.Response> AddCreditConditionAsync(CatalogServiceReferenece.CreditConditionDC creditCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateCreditCondition", ReplyAction="http://tempuri.org/ICatalogService/UpdateCreditConditionResponse")]
        CatalogServiceReferenece.Response UpdateCreditCondition(CatalogServiceReferenece.CreditConditionDC creditCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateCreditCondition", ReplyAction="http://tempuri.org/ICatalogService/UpdateCreditConditionResponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateCreditConditionAsync(CatalogServiceReferenece.CreditConditionDC creditCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateCreditConditionState", ReplyAction="http://tempuri.org/ICatalogService/UpdateCreditConditionStateResponse")]
        CatalogServiceReferenece.Response UpdateCreditConditionState(int id, bool state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateCreditConditionState", ReplyAction="http://tempuri.org/ICatalogService/UpdateCreditConditionStateResponse")]
        System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateCreditConditionStateAsync(int id, bool state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface ICatalogServiceChannel : CatalogServiceReferenece.ICatalogService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class CatalogServiceClient : System.ServiceModel.ClientBase<CatalogServiceReferenece.ICatalogService>, CatalogServiceReferenece.ICatalogService
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CatalogServiceClient() : 
                base(CatalogServiceClient.GetDefaultBinding(), CatalogServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ICatalogService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(CatalogServiceClient.GetBindingForEndpoint(endpointConfiguration), CatalogServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CatalogServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CatalogServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui GetRequiredDocumentationByPaginationNext(int pageSize, int lastId)
        {
            return base.Channel.GetRequiredDocumentationByPaginationNext(pageSize, lastId);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui> GetRequiredDocumentationByPaginationNextAsync(int pageSize, int lastId)
        {
            return base.Channel.GetRequiredDocumentationByPaginationNextAsync(pageSize, lastId);
        }
        
        public CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui GetRequiredDocumentationByPaginationPrevious(int pageSize, int firstId)
        {
            return base.Channel.GetRequiredDocumentationByPaginationPrevious(pageSize, firstId);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.ResponseWithContentOfArrayOfRequiredDocumentDC1nk_PiFui> GetRequiredDocumentationByPaginationPreviousAsync(int pageSize, int firstId)
        {
            return base.Channel.GetRequiredDocumentationByPaginationPreviousAsync(pageSize, firstId);
        }
        
        public CatalogServiceReferenece.Response AddRequiredDocument(CatalogServiceReferenece.RequiredDocumentDC requiredDocument)
        {
            return base.Channel.AddRequiredDocument(requiredDocument);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.Response> AddRequiredDocumentAsync(CatalogServiceReferenece.RequiredDocumentDC requiredDocument)
        {
            return base.Channel.AddRequiredDocumentAsync(requiredDocument);
        }
        
        public CatalogServiceReferenece.Response UpdateRequiredDocument(CatalogServiceReferenece.RequiredDocumentDC requiredDocument)
        {
            return base.Channel.UpdateRequiredDocument(requiredDocument);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateRequiredDocumentAsync(CatalogServiceReferenece.RequiredDocumentDC requiredDocument)
        {
            return base.Channel.UpdateRequiredDocumentAsync(requiredDocument);
        }
        
        public CatalogServiceReferenece.Response UpdateRequiredDocumentState(int id, bool isActive)
        {
            return base.Channel.UpdateRequiredDocumentState(id, isActive);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateRequiredDocumentStateAsync(int id, bool isActive)
        {
            return base.Channel.UpdateRequiredDocumentStateAsync(id, isActive);
        }
        
        public CatalogServiceReferenece.ResponseWithContentOfArrayOfCreditConditionDC1nk_PiFui GetCreditConditionsByPagination(int pageSize, int markId, bool next)
        {
            return base.Channel.GetCreditConditionsByPagination(pageSize, markId, next);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.ResponseWithContentOfArrayOfCreditConditionDC1nk_PiFui> GetCreditConditionsByPaginationAsync(int pageSize, int markId, bool next)
        {
            return base.Channel.GetCreditConditionsByPaginationAsync(pageSize, markId, next);
        }
        
        public CatalogServiceReferenece.Response AddCreditCondition(CatalogServiceReferenece.CreditConditionDC creditCondition)
        {
            return base.Channel.AddCreditCondition(creditCondition);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.Response> AddCreditConditionAsync(CatalogServiceReferenece.CreditConditionDC creditCondition)
        {
            return base.Channel.AddCreditConditionAsync(creditCondition);
        }
        
        public CatalogServiceReferenece.Response UpdateCreditCondition(CatalogServiceReferenece.CreditConditionDC creditCondition)
        {
            return base.Channel.UpdateCreditCondition(creditCondition);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateCreditConditionAsync(CatalogServiceReferenece.CreditConditionDC creditCondition)
        {
            return base.Channel.UpdateCreditConditionAsync(creditCondition);
        }
        
        public CatalogServiceReferenece.Response UpdateCreditConditionState(int id, bool state)
        {
            return base.Channel.UpdateCreditConditionState(id, state);
        }
        
        public System.Threading.Tasks.Task<CatalogServiceReferenece.Response> UpdateCreditConditionStateAsync(int id, bool state)
        {
            return base.Channel.UpdateCreditConditionStateAsync(id, state);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICatalogService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICatalogService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:5001/CatalogService.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CatalogServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICatalogService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CatalogServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICatalogService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ICatalogService,
        }
    }
}
